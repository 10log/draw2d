{
  "name": "Point",
  "namespace": "draw2d.geo",
  "description": "<p>draw2d.geo.Point Util class for geometrie handling.</p>",
  "extends": [],
  "access": "",
  "virtual": false,
  "fires": "",
  "constructor": {
    "name": "Point",
    "description": "",
    "parameters": [],
    "examples": []
  },
  "functions": [
    {
      "name": "init",
      "access": "",
      "virtual": false,
      "description": "<p>Creates a new Point object with the hands over coordinates.</p>",
      "parameters": [
        {
          "name": "x",
          "type": [
            "Number",
            "draw2d.geo.Point"
          ],
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "y",
          "type": "Number",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": []
    },
    {
      "name": "setBoundary",
      "access": "",
      "virtual": false,
      "description": "<p>Set the boundary of the rectangle. If set, the rectangle is always inside\nthe boundary. A setX or setY will always be adjusted.</p>",
      "parameters": [],
      "examples": []
    },
    {
      "name": "adjustBoundary",
      "access": "private",
      "virtual": false,
      "description": "",
      "parameters": [],
      "examples": []
    },
    {
      "name": "translate",
      "access": "",
      "virtual": false,
      "description": "<p>Moves this Rectangle horizontally by dx and vertically by dy, then returns\nthis Rectangle for convenience.<br>\n<br>\nThe method return the object itself. This allows you to do command chaining, where\nyou can perform multiple methods on the same elements.</p>",
      "parameters": [
        {
          "name": "dx",
          "type": "Number",
          "description": "<p>Shift along X axis</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "dy",
          "type": "Number",
          "description": "<p>Shift along Y axis</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": []
    },
    {
      "name": "getX",
      "access": "",
      "virtual": false,
      "description": "<p>The X value of the point</p>",
      "parameters": [],
      "examples": [],
      "returns": {
        "type": "Number",
        "description": ""
      }
    },
    {
      "name": "getY",
      "access": "",
      "virtual": false,
      "description": "<p>The y value of the point</p>",
      "parameters": [],
      "examples": [],
      "returns": {
        "type": "Number",
        "description": ""
      }
    },
    {
      "name": "setX",
      "access": "",
      "virtual": false,
      "description": "<p>Set the new X value of the point</p>",
      "parameters": [
        {
          "name": "x",
          "type": "Number",
          "description": "<p>the new value</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": []
    },
    {
      "name": "setY",
      "access": "",
      "virtual": false,
      "description": "<p>Set the new Y value of the point</p>",
      "parameters": [
        {
          "name": "y",
          "type": "Number",
          "description": "<p>the new value</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": []
    },
    {
      "name": "setPosition",
      "access": "",
      "virtual": false,
      "description": "<p>Set the new x/y coordinates of this point</p>",
      "parameters": [
        {
          "name": "x",
          "type": [
            "Number",
            "draw2d.geo.Point"
          ],
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "y",
          "type": "Number",
          "description": "",
          "default": "",
          "optional": true,
          "nullable": ""
        }
      ],
      "examples": []
    },
    {
      "name": "getPosition",
      "access": "",
      "virtual": false,
      "description": "<p>Calculates the relative position of the specified Point to this Point.</p>",
      "parameters": [
        {
          "name": "p",
          "type": "draw2d.geo.Point",
          "description": "<p>The reference Point</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": [],
      "returns": {
        "type": "Number",
        "description": "<p>NORTH, SOUTH, EAST, or WEST, as defined in {@link draw2d.geo.PositionConstants}</p>"
      }
    },
    {
      "name": "equals",
      "access": "",
      "virtual": false,
      "description": "<p>Compares two points and return [true] if x and y are equals.</p>",
      "parameters": [
        {
          "name": "p",
          "type": "draw2d.geo.Point",
          "description": "<p>the point to compare with</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": [],
      "returns": {
        "type": "Boolean",
        "description": ""
      }
    },
    {
      "name": "distance",
      "access": "",
      "virtual": false,
      "description": "<p>Return the distance between this point and the hands over.</p>",
      "parameters": [
        {
          "name": "other",
          "type": "draw2d.geo.Point",
          "description": "<p>the point to use</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": [],
      "returns": {
        "type": "Number",
        "description": ""
      }
    },
    {
      "name": "length",
      "access": "",
      "virtual": false,
      "description": "<p>Return the th of the vector from [0,0]</p>",
      "parameters": [],
      "examples": [],
      "returns": {
        "type": "Number",
        "description": ""
      }
    },
    {
      "name": "translated",
      "access": "",
      "virtual": false,
      "description": "<p>Return a new Point translated with the x/y values of the hands over point.</p>",
      "parameters": [
        {
          "name": "x",
          "type": [
            "draw2d.geo.Point",
            "Number"
          ],
          "description": "<p>the x translation or the complete point to translate</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "y",
          "type": "Number",
          "description": "<p>the y translation. Required if x is a simple number instead of a draw2d.geo.Point</p>",
          "default": "",
          "optional": true,
          "nullable": ""
        }
      ],
      "examples": [],
      "returns": {
        "type": "draw2d.geo.Point",
        "description": "<p>The new translated point.</p>"
      }
    },
    {
      "name": "scale",
      "access": "",
      "virtual": false,
      "description": "<p>Return a new Point scaled with the x/y values of the hands over point.</p>",
      "parameters": [
        {
          "name": "factor",
          "type": "Number",
          "description": "<p>the factor to scaled the new point.</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": [],
      "returns": {
        "type": "draw2d.geo.Point",
        "description": "<p>The new translated point.</p>"
      }
    },
    {
      "name": "scaled",
      "access": "",
      "virtual": false,
      "description": "<p>Return a new Point scaled with the x/y values of the hands over point.</p>",
      "parameters": [
        {
          "name": "factor",
          "type": "Number",
          "description": "<p>the factor to scaled the new point.</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": [],
      "returns": {
        "type": "draw2d.geo.Point",
        "description": "<p>The new translated point.</p>"
      }
    },
    {
      "name": "getPersistentAttributes",
      "access": "",
      "virtual": false,
      "description": "<p>Return an objects with all important attributes for XML or JSON serialization</p>",
      "parameters": [],
      "examples": [],
      "returns": {
        "type": "Object",
        "description": ""
      }
    },
    {
      "name": "setPersistentAttributes",
      "access": "",
      "virtual": false,
      "description": "<p>Read all attributes from the serialized properties and transfer them into the shape.</p>",
      "parameters": [
        {
          "name": "memento",
          "type": "Object",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": []
    },
    {
      "name": "subtract",
      "access": "",
      "virtual": false,
      "description": "<p>substract the given point and return the new point.</p>",
      "parameters": [
        {
          "name": "that",
          "type": "",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "examples": [],
      "returns": {
        "type": "draw2d.geo.Point",
        "description": ""
      }
    },
    {
      "name": "clone",
      "access": "",
      "virtual": false,
      "description": "<p>Clone the Point and return them</p>",
      "parameters": [],
      "examples": []
    }
  ]
}